<nav
  class="border-gray-200 bg-white px-2 py-6 dark:border-gray-700 dark:bg-gray-900"
>
  <div class="container mx-auto flex flex-wrap items-center justify-between">
    <a href="/" class="flex items-center">
      <span role="img" class="mr-2 text-5xl" title="island emoji">üèù</span>
      <span
        class="self-center whitespace-nowrap text-xl font-semibold dark:text-white"
        >Understanding Islands</span
      >
    </a>

    <button
      id="hamburger"
      type="button"
      data-collapse-toggle="mobileDropdownNavbar"
      class="ml-3 inline-flex items-center rounded-lg p-2 text-sm text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600 md:hidden"
      aria-controls="mobileDropdownNavbar"
      aria-expanded="false"
    >
      <span class="sr-only">Open main menu</span>
      <svg
        class="h-6 w-6"
        aria-hidden="true"
        fill="currentColor"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
        ><path
          fill-rule="evenodd"
          d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
          clip-rule="evenodd"></path></svg
      >
    </button>
    <div class="hidden w-full md:block md:w-auto" id="mobileDropdownNavbar">
      <ul
        class="mt-4 flex flex-col rounded-lg border border-gray-100 bg-gray-50 p-4 dark:border-gray-700 dark:bg-gray-800 md:mt-0 md:flex-row md:space-x-8 md:border-0 md:bg-white md:text-sm md:font-medium md:dark:bg-gray-900"
      >
        <li>
          <button
            id="dropdownMenuToggler"
            data-dropdown-toggle="dropdownNavbar"
            class="relative flex w-full items-center justify-between rounded py-2 pl-3 pr-4 font-medium text-gray-700 hover:bg-gray-100 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white dark:focus:text-white md:w-auto md:border-0 md:p-0 md:hover:bg-transparent md:hover:text-blue-700 md:dark:hover:bg-transparent"
            >Hydration method <svg
              class="ml-1 h-5 w-5"
              aria-hidden="true"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
              ><path
                fill-rule="evenodd"
                d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                clip-rule="evenodd"></path></svg
            ></button
          >
          <!-- Dropdown menu -->
          <div
            id="dropdownNavbar"
            class="absolute right-3 z-10 hidden w-44 divide-y divide-gray-100 rounded-lg bg-white font-normal shadow dark:divide-gray-600 dark:bg-gray-700"
          >
            <ul
              class="py-2 text-sm text-gray-700 dark:text-gray-400"
              aria-labelledby="dropdownLargeButton"
            >
              <li>
                <a
                  href="/load"
                  class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                  >client:load</a
                >
              </li>
              <li>
                <a
                  href="/only"
                  class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                  >client:only</a
                >
              </li>
              <li>
                <a
                  href="/visible"
                  class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white"
                  >client:visible</a
                >
              </li>
              <li>
                <a
                  href="/media"
                  class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white"
                  >client:media</a
                >
              </li>
              <li>
                <a
                  href="/idle"
                  class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white"
                  >client:idle</a
                >
              </li>
            </ul>
            <div class="py-1">
              <a
                href="/none"
                class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white"
                >none</a
              >
              <a
                href="/multiple-frameworks"
                class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white"
                >multiple frameworks</a
              >
            </div>
          </div>
        </li>
      </ul>
    </div>
  </div>
</nav>

<script>
  function handleNavToggle() {
    const bodyEl = document.querySelector("body");
    const mobileDropdownNavbarEl = document.getElementById(
      "mobileDropdownNavbar"
    );
    const hamburgerEl = document.getElementById("hamburger");
    const dropdownNavbarEl = document.getElementById("dropdownNavbar");
    const dropdownTogglerEl = document.getElementById("dropdownMenuToggler");

    if (
      !bodyEl ||
      !hamburgerEl ||
      !dropdownNavbarEl ||
      !dropdownTogglerEl ||
      !mobileDropdownNavbarEl
    ) {
      console.error("Expected DOM elements not present");
      return;
    }

    bodyEl.addEventListener("click", () => {
      const isMenuOpen = !dropdownNavbarEl.classList.contains("hidden");
      const isMobileMenuOpen =
        !mobileDropdownNavbarEl.classList.contains("hidden");
      if (isMenuOpen) {
        dropdownNavbarEl.classList.add("hidden");
      }
      if (isMobileMenuOpen) {
        mobileDropdownNavbarEl.classList.add("hidden");
      }
    });

    dropdownTogglerEl.addEventListener("click", (event) => {
      event.stopPropagation();
      dropdownNavbarEl.classList.toggle("hidden");
    });

    hamburgerEl.addEventListener("click", (event) => {
      event.stopPropagation();
      mobileDropdownNavbarEl.classList.toggle("hidden");
    });
  }

  handleNavToggle();
</script>
